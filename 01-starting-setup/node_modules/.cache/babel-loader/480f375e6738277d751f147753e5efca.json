{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabdellateef\\\\Documents\\\\GitHub\\\\react-tutorial\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses fond.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(item => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem // We should always add a key value to help react rendering the elements in more efficient way.\n      , {\n        title: item.title,\n        amount: item.amount,\n        date: item.date\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/mabdellateef/Documents/GitHub/react-tutorial/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","item","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAAgC;AAC9BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,IAAD,IAAU;AAC/C,0BACE,QAAC,WAAD,CACE;AADF;AAGE,QAAA,KAAK,EAAEA,IAAI,CAACC,KAHd;AAIE,QAAA,MAAM,EAAED,IAAI,CAACE,MAJf;AAKE,QAAA,IAAI,EAAEF,IAAI,CAACN;AALb,SAEOM,IAAI,CAACG,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAViB,CAAlB;AAWD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BAIE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEjB,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YAJF,EAQGS,eARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GA7EQb,Q;;KAAAA,Q;AA8ET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear\r\n  })\r\n\r\n  let expensesContent = <p>No expenses fond.</p>\r\n\r\n  if(filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((item) => {\r\n      return (\r\n        <ExpenseItem\r\n          // We should always add a key value to help react rendering the elements in more efficient way.\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        ></ExpenseItem>\r\n      );\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      {/* {console.log(props)}\r\n    {console.log('test')} */}\r\n\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {expensesContent}\r\n\r\n      {/*\r\n      The Problem here was that all items rendered in one card\r\n      <ExpenseItem\r\n        title={props.items.map((item) => {\r\n          console.log(item.title)\r\n          return item.title\r\n        }) }\r\n        amount={props.items.map((item) => {\r\n          console.log(item.amount)\r\n          return item.amount\r\n        })}\r\n        date={props.items.map((item) => {\r\n          console.log(item.date.toISOString())\r\n          return item.date\r\n        })}\r\n      ></ExpenseItem>*/}\r\n\r\n      {/*<ExpenseItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n    />\r\n    <ExpenseItem\r\n      title={props.items[1].title}\r\n      amount={props.items[1].amount}\r\n      date={props.items[1].date}\r\n    />\r\n    <ExpenseItem\r\n      title={props.items[2].title}\r\n      amount={props.items[2].amount}\r\n      date={props.items[2].date}\r\n    />\r\n    <ExpenseItem\r\n      title={props.items[3].title}\r\n      amount={props.items[3].amount}\r\n      date={props.items[3].date}\r\n    />*/}\r\n    </Card>\r\n  );\r\n}\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}