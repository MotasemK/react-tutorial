{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\labsh\\\\Documents\\\\Programming\\\\react-tutorial\\\\side-effects\\\\side-effects-project\\\\src\\\\App.js\";\nimport React from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // This Logic has been moved to the auth component\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem('isLoggedIn', '1')\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn')\n  //   setIsLoggedIn(false);\n  // };\n  return (\n    /*#__PURE__*/\n    // if we use a default value in the context we dont have to add a provider \n    // but in such cases we need the values inside the context to be changable\n    // in this case we have to add a value prop to pass it to child components\n    // Every component listening to auth component will have an access to these props\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/labsh/Documents/Programming/react-tutorial/side-effects/side-effects-project/src/App.js"],"names":["React","Login","Home","MainHeader","App","isLoggedIn","loginHandler","logoutHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAGA,SAASC,GAAT,GAAe;AAEb;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACE;AACA;AACA;AAEA;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAGG,CAACC,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHlB,EAIGD,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAgBD;;KAnCQH,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Login from './components/Login/Login';\r\nimport Home from './components/Home/Home';\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\n\r\n\r\nfunction App() {\r\n\r\n  // This Logic has been moved to the auth component\r\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  \r\n\r\n  // const loginHandler = (email, password) => {\r\n  //   // We should of course check email and password\r\n  //   // But it's just a dummy/ demo anyways\r\n  //   localStorage.setItem('isLoggedIn', '1')\r\n  //   setIsLoggedIn(true);\r\n  // };\r\n\r\n  // const logoutHandler = () => {\r\n  //   localStorage.removeItem('isLoggedIn')\r\n  //   setIsLoggedIn(false);\r\n  // };\r\n\r\n  return (\r\n    // if we use a default value in the context we dont have to add a provider \r\n    // but in such cases we need the values inside the context to be changable\r\n    // in this case we have to add a value prop to pass it to child components\r\n\r\n    // Every component listening to auth component will have an access to these props\r\n    <React.Fragment>\r\n      <MainHeader />\r\n      <main>\r\n        {/* we dont use useContext here because we are directly using the login and logout handlers\r\n        in the login and the home pages */}\r\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\r\n      </main>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}